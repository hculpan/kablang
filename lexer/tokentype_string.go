// Code generated by "stringer -type=TokenType ./lexer"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Identifier-0]
	_ = x[Println-1]
	_ = x[Print-2]
	_ = x[Var-3]
	_ = x[StringType-4]
	_ = x[NumberType-5]
	_ = x[For-6]
	_ = x[If-7]
	_ = x[Else-8]
	_ = x[Integer-9]
	_ = x[Float-10]
	_ = x[Percent-11]
	_ = x[Dash-12]
	_ = x[Plus-13]
	_ = x[PlusEquals-14]
	_ = x[DoublePlus-15]
	_ = x[Mult-16]
	_ = x[Div-17]
	_ = x[Exponent-18]
	_ = x[Equals-19]
	_ = x[String-20]
	_ = x[LeftCurlyBrace-21]
	_ = x[RightCurlyBrace-22]
	_ = x[LeftParen-23]
	_ = x[RightParen-24]
	_ = x[LessThanEquals-25]
	_ = x[LessThan-26]
	_ = x[GreaterThanEquals-27]
	_ = x[GreaterThan-28]
	_ = x[DoubleEquals-29]
	_ = x[Not-30]
	_ = x[NotEquals-31]
	_ = x[Period-32]
	_ = x[Newline-33]
	_ = x[Hash-34]
	_ = x[EndTokenList-35]
}

const _TokenType_name = "IdentifierPrintlnPrintVarStringTypeNumberTypeForIfElseIntegerFloatPercentDashPlusPlusEqualsDoublePlusMultDivExponentEqualsStringLeftCurlyBraceRightCurlyBraceLeftParenRightParenLessThanEqualsLessThanGreaterThanEqualsGreaterThanDoubleEqualsNotNotEqualsPeriodNewlineHashEndTokenList"

var _TokenType_index = [...]uint16{0, 10, 17, 22, 25, 35, 45, 48, 50, 54, 61, 66, 73, 77, 81, 91, 101, 105, 108, 116, 122, 128, 142, 157, 166, 176, 190, 198, 215, 226, 238, 241, 250, 256, 263, 267, 279}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
